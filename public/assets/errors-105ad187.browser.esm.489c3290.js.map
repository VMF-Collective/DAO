{"version":3,"file":"errors-105ad187.browser.esm.489c3290.js","sources":["../../node_modules/@thirdweb-dev/wallets/dist/errors-105ad187.browser.esm.js"],"sourcesContent":["import { _ as _defineProperty } from './defineProperty-c8ecdc07.browser.esm.js';\n\n/**\n * Error subclass implementing JSON RPC 2.0 errors and Ethereum RPC errors per EIP-1474.\n * @see https://eips.ethereum.org/EIPS/eip-1474\n */\nclass RpcError extends Error {\n  constructor( /** Human-readable string */\n  message, options) {\n    const {\n      cause,\n      code,\n      data\n    } = options;\n    if (!Number.isInteger(code)) {\n      throw new Error('\"code\" must be an integer.');\n    }\n    if (!message || typeof message !== \"string\") {\n      throw new Error('\"message\" must be a nonempty string.');\n    }\n    super(message);\n    _defineProperty(this, \"cause\", void 0);\n    _defineProperty(this, \"code\", void 0);\n    _defineProperty(this, \"data\", void 0);\n    this.cause = cause;\n    this.code = code;\n    this.data = data;\n  }\n}\n\n/**\n * Error subclass implementing Ethereum Provider errors per EIP-1193.\n * @see https://eips.ethereum.org/EIPS/eip-1193\n */\nclass ProviderRpcError extends RpcError {\n  /**\n   * Create an Ethereum Provider JSON-RPC error.\n   * `code` must be an integer in the 1000 <= 4999 range.\n   */\n  constructor( /** Human-readable string */\n  message, options) {\n    const {\n      cause,\n      code,\n      data\n    } = options;\n    if (!(Number.isInteger(code) && code >= 1000 && code <= 4999)) {\n      throw new Error('\"code\" must be an integer such that: 1000 <= code <= 4999');\n    }\n    super(message, {\n      cause,\n      code,\n      data\n    });\n  }\n}\nclass AddChainError extends Error {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"name\", \"AddChainError\");\n    _defineProperty(this, \"message\", \"Error adding chain\");\n  }\n}\nclass ChainNotConfiguredError extends Error {\n  constructor(_ref) {\n    let {\n      chainId,\n      connectorId\n    } = _ref;\n    super(`Chain \"${chainId}\" not configured for connector \"${connectorId}\".`);\n    _defineProperty(this, \"name\", \"ChainNotConfigured\");\n  }\n}\nclass ConnectorNotFoundError extends Error {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"name\", \"ConnectorNotFoundError\");\n    _defineProperty(this, \"message\", \"Connector not found\");\n  }\n}\nclass ResourceUnavailableError extends RpcError {\n  constructor(cause) {\n    super(\"Resource unavailable\", {\n      cause,\n      code: -32002\n    });\n    _defineProperty(this, \"name\", \"ResourceUnavailable\");\n  }\n}\nclass SwitchChainError extends ProviderRpcError {\n  constructor(cause) {\n    super(\"Error switching chain\", {\n      cause,\n      code: 4902\n    });\n    _defineProperty(this, \"name\", \"SwitchChainError\");\n  }\n}\nclass UserRejectedRequestError extends ProviderRpcError {\n  constructor(cause) {\n    super(\"User rejected request\", {\n      cause,\n      code: 4001\n    });\n    _defineProperty(this, \"name\", \"UserRejectedRequestError\");\n  }\n}\n\n// Ethers does not have an error type so we can use this for casting\n// https://github.com/ethers-io/ethers.js/blob/main/packages/logger/src.ts/index.ts#L268\n\nexport { AddChainError as A, ChainNotConfiguredError as C, ProviderRpcError as P, ResourceUnavailableError as R, SwitchChainError as S, UserRejectedRequestError as U, ConnectorNotFoundError as a };\n"],"names":["RpcError","message","options","cause","code","data","_defineProperty","ProviderRpcError","AddChainError","ChainNotConfiguredError","_ref","chainId","connectorId","ConnectorNotFoundError","ResourceUnavailableError","SwitchChainError","UserRejectedRequestError"],"mappings":"yCAMA,MAAMA,UAAiB,KAAM,CAC3B,YACAC,EAASC,EAAS,CAChB,KAAM,CACJ,MAAAC,EACA,KAAAC,EACA,KAAAC,CACD,EAAGH,EACJ,GAAI,CAAC,OAAO,UAAUE,CAAI,EACxB,MAAM,IAAI,MAAM,4BAA4B,EAE9C,GAAI,CAACH,GAAW,OAAOA,GAAY,SACjC,MAAM,IAAI,MAAM,sCAAsC,EAExD,MAAMA,CAAO,EACbK,EAAgB,KAAM,QAAS,MAAM,EACrCA,EAAgB,KAAM,OAAQ,MAAM,EACpCA,EAAgB,KAAM,OAAQ,MAAM,EACpC,KAAK,MAAQH,EACb,KAAK,KAAOC,EACZ,KAAK,KAAOC,CACb,CACH,CAMA,MAAME,UAAyBP,CAAS,CAKtC,YACAC,EAASC,EAAS,CAChB,KAAM,CACJ,MAAAC,EACA,KAAAC,EACA,KAAAC,CACD,EAAGH,EACJ,GAAI,EAAE,OAAO,UAAUE,CAAI,GAAKA,GAAQ,KAAQA,GAAQ,MACtD,MAAM,IAAI,MAAM,2DAA2D,EAE7E,MAAMH,EAAS,CACb,MAAAE,EACA,KAAAC,EACA,KAAAC,CACN,CAAK,CACF,CACH,CACA,MAAMG,UAAsB,KAAM,CAChC,aAAc,CACZ,MAAM,GAAG,SAAS,EAClBF,EAAgB,KAAM,OAAQ,eAAe,EAC7CA,EAAgB,KAAM,UAAW,oBAAoB,CACtD,CACH,CACA,MAAMG,UAAgC,KAAM,CAC1C,YAAYC,EAAM,CAChB,GAAI,CACF,QAAAC,EACA,YAAAC,CACD,EAAGF,EACJ,MAAM,UAAUC,oCAA0CC,KAAe,EACzEN,EAAgB,KAAM,OAAQ,oBAAoB,CACnD,CACH,CACA,MAAMO,UAA+B,KAAM,CACzC,aAAc,CACZ,MAAM,GAAG,SAAS,EAClBP,EAAgB,KAAM,OAAQ,wBAAwB,EACtDA,EAAgB,KAAM,UAAW,qBAAqB,CACvD,CACH,CACA,MAAMQ,UAAiCd,CAAS,CAC9C,YAAYG,EAAO,CACjB,MAAM,uBAAwB,CAC5B,MAAAA,EACA,KAAM,MACZ,CAAK,EACDG,EAAgB,KAAM,OAAQ,qBAAqB,CACpD,CACH,CACA,MAAMS,UAAyBR,CAAiB,CAC9C,YAAYJ,EAAO,CACjB,MAAM,wBAAyB,CAC7B,MAAAA,EACA,KAAM,IACZ,CAAK,EACDG,EAAgB,KAAM,OAAQ,kBAAkB,CACjD,CACH,CACA,MAAMU,UAAiCT,CAAiB,CACtD,YAAYJ,EAAO,CACjB,MAAM,wBAAyB,CAC7B,MAAAA,EACA,KAAM,IACZ,CAAK,EACDG,EAAgB,KAAM,OAAQ,0BAA0B,CACzD,CACH"}