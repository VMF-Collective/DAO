import{aF as e}from"./index.5c959672.js";class a extends Error{constructor(r,t){const{cause:n,code:o,data:c}=t;if(!Number.isInteger(o))throw new Error('"code" must be an integer.');if(!r||typeof r!="string")throw new Error('"message" must be a nonempty string.');super(r),e(this,"cause",void 0),e(this,"code",void 0),e(this,"data",void 0),this.cause=n,this.code=o,this.data=c}}class i extends a{constructor(r,t){const{cause:n,code:o,data:c}=t;if(!(Number.isInteger(o)&&o>=1e3&&o<=4999))throw new Error('"code" must be an integer such that: 1000 <= code <= 4999');super(r,{cause:n,code:o,data:c})}}class u extends Error{constructor(){super(...arguments),e(this,"name","AddChainError"),e(this,"message","Error adding chain")}}class h extends Error{constructor(r){let{chainId:t,connectorId:n}=r;super(`Chain "${t}" not configured for connector "${n}".`),e(this,"name","ChainNotConfigured")}}class E extends Error{constructor(){super(...arguments),e(this,"name","ConnectorNotFoundError"),e(this,"message","Connector not found")}}class m extends a{constructor(r){super("Resource unavailable",{cause:r,code:-32002}),e(this,"name","ResourceUnavailable")}}class l extends i{constructor(r){super("Error switching chain",{cause:r,code:4902}),e(this,"name","SwitchChainError")}}class p extends i{constructor(r){super("User rejected request",{cause:r,code:4001}),e(this,"name","UserRejectedRequestError")}}export{u as A,h as C,m as R,l as S,p as U,E as a};
//# sourceMappingURL=errors-105ad187.browser.esm.97fe7189.js.map
