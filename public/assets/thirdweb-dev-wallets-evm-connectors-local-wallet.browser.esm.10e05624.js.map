{"version":3,"file":"thirdweb-dev-wallets-evm-connectors-local-wallet.browser.esm.10e05624.js","sources":["../../node_modules/@thirdweb-dev/wallets/dist/keys-bd983fca.browser.esm.js","../../node_modules/@thirdweb-dev/wallets/evm/connectors/local-wallet/dist/thirdweb-dev-wallets-evm-connectors-local-wallet.browser.esm.js"],"sourcesContent":["const DEFAULT_WALLET_API_KEY = \"4f20f63d3ce0ec88eca639a291effef1559289d5614d77040d783048a4b3f316\";\n\nexport { DEFAULT_WALLET_API_KEY as D };\n","import { _ as _classPrivateFieldInitSpec, a as _classPrivateFieldSet, b as _classPrivateFieldGet } from '../../../../dist/classPrivateFieldSet-a5db7c83.browser.esm.js';\nimport { _ as _defineProperty } from '../../../../dist/defineProperty-c8ecdc07.browser.esm.js';\nimport { C as Connector } from '../../../../dist/connector-c1e1817a.browser.esm.js';\nimport { getChainProvider } from '@thirdweb-dev/sdk';\nimport { D as DEFAULT_WALLET_API_KEY } from '../../../../dist/keys-bd983fca.browser.esm.js';\nimport { n as normalizeChainId } from '../../../../dist/normalizeChainId-e4cc0175.browser.esm.js';\nimport 'eventemitter3';\n\nvar _provider = /*#__PURE__*/new WeakMap();\nvar _signer = /*#__PURE__*/new WeakMap();\nclass LocalWalletConnector extends Connector {\n  constructor(options) {\n    super();\n    _defineProperty(this, \"id\", \"local_wallet\");\n    _defineProperty(this, \"name\", \"Local Wallet\");\n    _defineProperty(this, \"options\", void 0);\n    _classPrivateFieldInitSpec(this, _provider, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _signer, {\n      writable: true,\n      value: void 0\n    });\n    _defineProperty(this, \"shimDisconnectKey\", \"localWallet.shimDisconnect\");\n    _defineProperty(this, \"onChainChanged\", chainId => {\n      const id = normalizeChainId(chainId);\n      const unsupported = !this.options.chains.find(c => c.chainId === id);\n      this.emit(\"change\", {\n        chain: {\n          id,\n          unsupported\n        }\n      });\n    });\n    this.options = options;\n  }\n  async connect(args) {\n    if (args.chainId) {\n      this.switchChain(args.chainId);\n    }\n    const signer = await this.getSigner();\n    const address = await signer.getAddress();\n    return address;\n  }\n  async disconnect() {\n    _classPrivateFieldSet(this, _provider, undefined);\n    _classPrivateFieldSet(this, _signer, undefined);\n  }\n  async getAddress() {\n    const signer = await this.getSigner();\n    if (!signer) {\n      throw new Error(\"No signer found\");\n    }\n    return await signer.getAddress();\n  }\n  async isConnected() {\n    try {\n      const addr = await this.getAddress();\n      return !!addr;\n    } catch {\n      return false;\n    }\n  }\n  async getProvider() {\n    if (!_classPrivateFieldGet(this, _provider)) {\n      _classPrivateFieldSet(this, _provider, getChainProvider(this.options.chain, {\n        thirdwebApiKey: this.options.thirdwebApiKey || DEFAULT_WALLET_API_KEY\n      }));\n    }\n    return _classPrivateFieldGet(this, _provider);\n  }\n  async getSigner() {\n    if (!_classPrivateFieldGet(this, _signer)) {\n      const provider = await this.getProvider();\n      _classPrivateFieldSet(this, _signer, getSignerFromEthersWallet(this.options.ethersWallet, provider));\n    }\n    return _classPrivateFieldGet(this, _signer);\n  }\n  async switchChain(chainId) {\n    const chain = this.options.chains.find(c => c.chainId === chainId);\n    if (!chain) {\n      throw new Error(`Chain not found for chainId ${chainId}, please add it to the chains property when creating this wallet`);\n    }\n    _classPrivateFieldSet(this, _provider, getChainProvider(chain, {\n      thirdwebApiKey: this.options.thirdwebApiKey || DEFAULT_WALLET_API_KEY\n    }));\n    _classPrivateFieldSet(this, _signer, getSignerFromEthersWallet(this.options.ethersWallet, _classPrivateFieldGet(this, _provider)));\n    this.onChainChanged(chainId);\n  }\n  async setupListeners() {}\n  updateChains(chains) {\n    this.options.chains = chains;\n  }\n}\nfunction getSignerFromEthersWallet(ethersWallet, provider) {\n  if (provider) {\n    return ethersWallet.connect(provider);\n  }\n  return ethersWallet;\n}\n\nexport { LocalWalletConnector };\n"],"names":["DEFAULT_WALLET_API_KEY","_provider","_signer","LocalWalletConnector","Connector","options","_defineProperty","_classPrivateFieldInitSpec","chainId","id","normalizeChainId","unsupported","c","args","_classPrivateFieldSet","signer","_classPrivateFieldGet","getChainProvider","provider","getSignerFromEthersWallet","chain","chains","ethersWallet"],"mappings":"yJAAA,MAAMA,EAAyB,mECQ/B,IAAIC,EAAyB,IAAI,QAC7BC,EAAuB,IAAI,QAC/B,MAAMC,UAA6BC,CAAU,CAC3C,YAAYC,EAAS,CACnB,QACAC,EAAgB,KAAM,KAAM,cAAc,EAC1CA,EAAgB,KAAM,OAAQ,cAAc,EAC5CA,EAAgB,KAAM,UAAW,MAAM,EACvCC,EAA2B,KAAMN,EAAW,CAC1C,SAAU,GACV,MAAO,MACb,CAAK,EACDM,EAA2B,KAAML,EAAS,CACxC,SAAU,GACV,MAAO,MACb,CAAK,EACDI,EAAgB,KAAM,oBAAqB,4BAA4B,EACvEA,EAAgB,KAAM,iBAAkBE,GAAW,CACjD,MAAMC,EAAKC,EAAiBF,CAAO,EAC7BG,EAAc,CAAC,KAAK,QAAQ,OAAO,KAAKC,GAAKA,EAAE,UAAYH,CAAE,EACnE,KAAK,KAAK,SAAU,CAClB,MAAO,CACL,GAAAA,EACA,YAAAE,CACD,CACT,CAAO,CACP,CAAK,EACD,KAAK,QAAUN,CAChB,CACD,MAAM,QAAQQ,EAAM,CAClB,OAAIA,EAAK,SACP,KAAK,YAAYA,EAAK,OAAO,EAGf,MADD,MAAM,KAAK,aACG,YAE9B,CACD,MAAM,YAAa,CACjBC,EAAsB,KAAMb,EAAW,MAAS,EAChDa,EAAsB,KAAMZ,EAAS,MAAS,CAC/C,CACD,MAAM,YAAa,CACjB,MAAMa,EAAS,MAAM,KAAK,YAC1B,GAAI,CAACA,EACH,MAAM,IAAI,MAAM,iBAAiB,EAEnC,OAAO,MAAMA,EAAO,YACrB,CACD,MAAM,aAAc,CAClB,GAAI,CAEF,MAAO,CAAC,CADK,MAAM,KAAK,YAE9B,MAAM,CACA,MAAO,EACR,CACF,CACD,MAAM,aAAc,CAClB,OAAKC,EAAsB,KAAMf,CAAS,GACxCa,EAAsB,KAAMb,EAAWgB,EAAiB,KAAK,QAAQ,MAAO,CAC1E,eAAgB,KAAK,QAAQ,gBAAkBjB,CAChD,CAAA,CAAC,EAEGgB,EAAsB,KAAMf,CAAS,CAC7C,CACD,MAAM,WAAY,CAChB,GAAI,CAACe,EAAsB,KAAMd,CAAO,EAAG,CACzC,MAAMgB,EAAW,MAAM,KAAK,cAC5BJ,EAAsB,KAAMZ,EAASiB,EAA0B,KAAK,QAAQ,aAAcD,CAAQ,CAAC,CACpG,CACD,OAAOF,EAAsB,KAAMd,CAAO,CAC3C,CACD,MAAM,YAAYM,EAAS,CACzB,MAAMY,EAAQ,KAAK,QAAQ,OAAO,KAAKR,GAAKA,EAAE,UAAYJ,CAAO,EACjE,GAAI,CAACY,EACH,MAAM,IAAI,MAAM,+BAA+BZ,mEAAyE,EAE1HM,EAAsB,KAAMb,EAAWgB,EAAiBG,EAAO,CAC7D,eAAgB,KAAK,QAAQ,gBAAkBpB,CAChD,CAAA,CAAC,EACFc,EAAsB,KAAMZ,EAASiB,EAA0B,KAAK,QAAQ,aAAcH,EAAsB,KAAMf,CAAS,CAAC,CAAC,EACjI,KAAK,eAAeO,CAAO,CAC5B,CACD,MAAM,gBAAiB,CAAE,CACzB,aAAaa,EAAQ,CACnB,KAAK,QAAQ,OAASA,CACvB,CACH,CACA,SAASF,EAA0BG,EAAcJ,EAAU,CACzD,OAAIA,EACKI,EAAa,QAAQJ,CAAQ,EAE/BI,CACT"}